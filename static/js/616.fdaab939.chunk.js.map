{"version":3,"file":"static/js/616.fdaab939.chunk.js","mappings":"oOACA,GAAgB,UAAY,gCAAgC,YAAc,kCAAkC,UAAY,gCAAgC,aAAe,mCAAmC,MAAQ,4BAA4B,KAAO,4B,kBC2ErP,EAtEqB,WAAO,IAAD,IACzB,GAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAGFE,EAAU,qBAFCC,EAAAA,EAAAA,MAEWC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAI3CC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaP,GACVQ,MAAK,SAAAC,GAAO,OAAIV,EAASU,EAAb,IACZC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACX,IAIJ,OACE,iCACE,UAAC,KAAD,CAAMc,GAAIZ,EAAYa,UAAWC,EAAAA,UAAjC,WACE,SAAC,MAAD,CAASC,KAAM,KADjB,cAGCnB,IACC,gBAAIiB,UAAWC,EAAAA,MAAf,UACGlB,EAAMoB,MADT,KARa,IAAIC,KAAKrB,EAAMsB,cAAcC,cAQ1C,QAIF,iBAAKN,UAAWC,EAAAA,UAAhB,UACGlB,IACC,gBACEwB,MAAO,IACPC,IACwB,OAAtBzB,EAAM0B,YAAN,UACOC,EAAAA,IADP,UAEOC,EAAAA,IAFP,OAEiB5B,EAAM0B,aAEzBG,IAAK7B,EAAM8B,kBAGf,iBAAKb,UAAWC,EAAAA,YAAhB,UACGlB,IACC,eAAGiB,UAAWC,EAAAA,KAAd,WACE,uCADF,IACsBlB,EAAM+B,aAAaC,QAAQ,MAGlDhC,IACC,eAAGiB,UAAWC,EAAAA,KAAd,WACE,qCADF,IACoBlB,EAAMiC,YAG3BjC,IACC,eAAGiB,UAAWC,EAAAA,KAAd,WACE,kCADF,IACiBlB,EAAMkC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAKlE,eAAIrB,UAAWC,EAAAA,MAAf,sCACA,gBAAID,UAAWC,EAAAA,SAAf,WACE,eAAID,UAAWC,EAAAA,aAAf,UACE,SAAC,KAAD,CAAMF,GAAG,OAAT,sBAEF,eAAIC,UAAWC,EAAAA,aAAf,UACE,SAAC,KAAD,CAAMF,GAAG,UAAT,2BAGJ,SAAC,KAAD,MAGL,C,8OCzEKuB,EAAU,mCACVC,EAAU,6BAEHC,EAAiB,mCAAG,oGACbC,EAAAA,GAAAA,IAAA,UACbF,EADa,uCACyBD,IAFZ,cACzBI,EADyB,yBAIxBA,EAAIC,KAAKjC,SAJe,2CAAH,qDAOjBkC,EAAY,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,GAAAA,IAAA,UACbF,EADa,mCACqBD,EADrB,yBAC6CO,IAFrC,cACpBH,EADoB,yBAInBA,EAAIC,KAAKjC,SAJU,2CAAH,sDAOZF,EAAY,mCAAG,WAAMP,GAAN,uFACRwC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,oBAAgCtC,EAAhC,oBAA8CqC,IADtC,cACpBI,EADoB,yBAEnBA,EAAIC,MAFe,2CAAH,sDAKZG,EAAc,mCAAG,WAAM7C,GAAN,uFACVwC,EAAAA,GAAAA,IAAA,UACbF,EADa,oBACMtC,EADN,4BAC4BqC,IAFlB,cACtBI,EADsB,yBAIrBA,EAAIC,MAJiB,2CAAH,sDAOdI,EAAe,mCAAG,WAAM9C,GAAN,uFACXwC,EAAAA,GAAAA,IAAA,UACbF,EADa,oBACMtC,EADN,4BAC4BqC,IAFjB,cACvBI,EADuB,yBAItBA,EAAIC,MAJkB,2CAAH,sDAOfhB,EAAU,mCACVD,EACX,8D","sources":["webpack://react-homework-template/./src/pages/MovieDetails.module.css?6cd2","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__yKjnD\",\"description\":\"MovieDetails_description__RMUTf\",\"btnGoBack\":\"MovieDetails_btnGoBack__rrPWy\",\"infoListItem\":\"MovieDetails_infoListItem__ve5nd\",\"title\":\"MovieDetails_title__-2Xvc\",\"info\":\"MovieDetails_info__QdAR5\"};","import { useLocation, useParams, Link, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieById, IMG_URL, defaultActor } from 'services/api';\nimport css from './MovieDetails.module.css';\nimport { MdReply } from 'react-icons/md';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n\n  const backToList = location.state?.from ?? '/';\n\n  // console.log(location.state);\n\n  useEffect(() => {\n    getMovieById(id)\n      .then(results => setMovie(results))\n      .catch(err => console.log(err));\n  }, [id]);\n  // console.log(movie);\n  const date = () => new Date(movie.release_date).getFullYear();\n\n  return (\n    <>\n      <Link to={backToList} className={css.btnGoBack}>\n        <MdReply size={20} /> Go back\n      </Link>\n      {movie && (\n        <h1 className={css.title}>\n          {movie.title} ({date()})\n        </h1>\n      )}\n      <div className={css.container}>\n        {movie && (\n          <img\n            width={300}\n            src={\n              movie.poster_path === null\n                ? `${defaultActor}`\n                : `${IMG_URL}${movie.poster_path}`\n            }\n            alt={movie.original_title}\n          />\n        )}\n        <div className={css.description}>\n          {movie && (\n            <p className={css.info}>\n              <b>User Score:</b> {movie.vote_average.toFixed(2)}\n            </p>\n          )}\n          {movie && (\n            <p className={css.info}>\n              <b>Overview:</b> {movie.overview}\n            </p>\n          )}\n          {movie && (\n            <p className={css.info}>\n              <b>Genre:</b> {movie.genres.map(genre => genre.name).join(' ')}\n            </p>\n          )}\n        </div>\n      </div>\n      <h2 className={css.title}>Additional information:</h2>\n      <ul className={css.infoList}>\n        <li className={css.infoListItem}>\n          <Link to=\"cast\">Casts</Link>\n        </li>\n        <li className={css.infoListItem}>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'd462dbf2621bfffe74242c381d524d5d';\nconst baseURL = 'https://api.themoviedb.org';\n\nexport const fetchPopularFilms = async () => {\n  const res = await axios.get(\n    `${baseURL}/3/trending/all/day?api_key=${API_KEY}`\n  );\n  return res.data.results;\n};\n\nexport const searchMovies = async query => {\n  const res = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&page=1&query=${query}`\n  );\n  return res.data.results;\n};\n\nexport const getMovieById = async id => {\n  const res = await axios.get(`${baseURL}/3/movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieActors = async id => {\n  const res = await axios.get(\n    `${baseURL}/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return res.data;\n};\n\nexport const getMovieReviews = async id => {\n  const res = await axios.get(\n    `${baseURL}/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return res.data;\n};\n\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const defaultActor =\n  'https://tanzolymp.com/images/default-non-user-no-photo-1.jpg';\n"],"names":["useState","movie","setMovie","id","useParams","backToList","useLocation","state","from","useEffect","getMovieById","then","results","catch","err","console","log","to","className","css","size","title","Date","release_date","getFullYear","width","src","poster_path","defaultActor","IMG_URL","alt","original_title","vote_average","toFixed","overview","genres","map","genre","name","join","API_KEY","baseURL","fetchPopularFilms","axios","res","data","searchMovies","query","getMovieActors","getMovieReviews"],"sourceRoot":""}